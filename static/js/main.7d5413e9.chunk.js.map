{"version":3,"sources":["SquareComponent.js","App.js","reportWebVitals.js","index.js"],"names":["SquareComponent","props","classes","className","onClick","state","initialState","App","useState","gameState","setGameState","isXChance","setIsXChance","onSquareClicked","index","strings","Array","from","useEffect","winner","checkWinner","alert","lines","i","length","a","b","c","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d5413e9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst SquareComponent = (props) => {\r\n    const classes = props.className ? `${props.className} square`: 'square'\r\n    return (\r\n        <span className={classes} onClick={props.onClick}>\r\n            {props.state}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default SquareComponent\r\n","import { useState, useEffect } from 'react';\nimport './index.css';\nimport SquareComponent from './SquareComponent';\n\n\nconst initialState = [\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"];\n\n\nfunction App() {\n\n  // gameState is use to handle the is state of every squareComponent.\n  const [gameState, setGameState] = useState(initialState);\n\n  // isXChance state is used to handle the player state accordingly.\n  const [isXChance, setIsXChance] = useState(false);\n\n  const onSquareClicked = (index) => {\n    let strings = Array.from(gameState);\n    strings[index] = isXChance ? \"X\" : \"0\";\n    setGameState(strings);\n    setIsXChance(!isXChance);\n  }\n\n  \n  useEffect(()  => {\n    const winner = checkWinner();\n    if(winner) {\n      alert(`Ta da! ${winner} has won the game`);\n      setGameState(initialState);\n    }\n  }, [gameState])\n\n  // The checkWinner function will handle the logic to determine who won the game. If there is no winner it simply return \"null\".\n  const checkWinner = () => {\n    const lines = [\n      [0,1,2],\n      [3,4,5],\n      [6,7,8],\n      [0,3,6],\n      [1,4,7],\n      [2,5,8],\n      [0,4,8],\n      [2,4,6],\n    ];\n    for (let i=0; i < lines.length; i++ ) {\n      const [a,b,c] = lines[i];\n      if (gameState[a] && gameState[a] === gameState[b] && gameState[a] === gameState[c]) {\n        return gameState[a];\n      }\n    }\n    return null;\n  }\n\n  return (\n    <div className=\"app-header\">\n      <p className=\"heading-text\">React Tic Tac Toe</p>\n      <div className=\"row jc-center\" >\n        <SquareComponent className='b-bottom-right'state={gameState[0]} onClick={() => onSquareClicked(0)}/>\n        <SquareComponent className='b-bottom-right'state={gameState[1]}onClick={() => onSquareClicked(1)}/>\n        <SquareComponent className='b-bottom'state={gameState[2]} onClick={() => onSquareClicked(2)}/>\n      </div>\n      <div className=\"row jc-center\">\n        <SquareComponent className='b-bottom-right'state={gameState[3]}onClick={() => onSquareClicked(3)}/>\n        <SquareComponent className='b-bottom-right'state={gameState[4]} onClick={() => onSquareClicked(4)}/>\n        <SquareComponent className='b-bottom'state={gameState[5]} onClick={() => onSquareClicked(5)}/>\n      </div>\n      <div className=\"row jc-center\">\n        <SquareComponent className='b-right'state={gameState[6]} onClick={() => onSquareClicked(6)}/>\n        <SquareComponent className='b-right'state={gameState[7]} onClick ={() => onSquareClicked(7)}/>\n        <SquareComponent className=''state={gameState[8]} onClick={() => onSquareClicked(8)}/>\n      </div>\n      <button className=\"clear-button\" onClick={() => setGameState(initialState)}>Clear Game</button>\n      <p className=\"fc-aqua fw-600\">Aniket Gupta</p>\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}